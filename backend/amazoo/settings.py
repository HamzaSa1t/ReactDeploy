"""
Django settings for amazoo project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""


from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
import os 
"""
 The Path class from the pathlib module provides an object-oriented way to work with file system paths. It makes working with paths.
 Represents a duration or difference between two dates or times. Often used in calculations for time intervals.
 Loads environment variables from a .env file into your application's environment variables.  Useful for managing sensitive information (e.g., API keys, database credentials) without hardcoding them in your code.load_dotenv reads this file and makes these values accessible via os.environ.
 Provides functions to interact with the operating system, such as managing files, directories, and environment variables.  Get the system's PATH variable, Create a new directory
"""

load_dotenv()
"""
"""

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%=3xm$lrhgufaw*e2zv6w(z2j^h1r89wg5l3jky5)h(@je1chq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
""" WE  JUST ADDDED * INSIDE THE [] TO ALLIW ALL THE HOSTS TO BE ALLOWED"""

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ]
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=2),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=3),
}
"""
This code is configuring the Django REST Framework (DRF) and the Simple JWT library.
"""
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api',
    "rest_framework",
    "corsheaders",
]
""" 
added api, rest_framework, corsheaders.
"""

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
]
"""
- we added corsheaders to middleware.
- middleware is a framework that allows you to process requests and responses globally before they reach a view or after they leave a view. Modify, authenticate, or validate incoming HTTP requests before they reach the view.
- The corsheaders.middleware.CorsMiddleware in Django is used to handle Cross-Origin Resource Sharing (CORS). (Cross-Origin Resource Sharing) is a security mechanism that allows or restricts resources (e.g., APIs, static files) on your server to be accessed by client applications from a different domain.
"""

ROOT_URLCONF = 'amazoo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'amazoo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# This will ensure a separate test database is used
DATABASES['default']['NAME'] = 'test_mydb'  # Django automatically creates a test version of your database.


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWS_CREDENTIALS = True
"""
WE ADDED THOSE FUNCTIONS AND MADE THEM = TRUE.
"""
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173", # or the correct port for your react app.
    "http://localhost:5175",
    "https://react-deploy-wt6b.vercel.app",
]

CORS_ALLOW_CREDENTIALS = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Replace with your SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'amazoowebsite@gmail.com'
EMAIL_HOST_PASSWORD = 'wrhh zbnl vqek xnqn'  